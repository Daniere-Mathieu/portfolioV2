name: "Create Release Branch and PR"

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  release_branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract version from package.json
        id: get_version
        run: |
          # Parse package.json to get the version string (e.g., "1.2.3")
          VERSION=$(jq -r '.version' package.json)
          # Set the version as an output for use in later steps
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Configure git author
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create release branch
        run: |
          # Create a new branch "release/<version>" from the current main
          git checkout -b "release/${{ steps.get_version.outputs.version }}" origin/main

      - name: Create empty release commit [skip ci]
        run: |
          # Create an empty commit to ensure the branch has a unique history
          git commit --allow-empty -m "chore: Release ${{ steps.get_version.outputs.version }} [skip ci]"

      - name: Push release branch to GitHub
        run: |
          # Push the new branch to origin repository
          git push origin "HEAD:refs/heads/release/${{ steps.get_version.outputs.version }}"

      - name: Open pull request (main -> release branch)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # authenticate GitHub CLI with token
        run: |
          gh pr create \
            --base "release/${{ steps.get_version.outputs.version }}" \
            --head "main" \
            --title "Release ${{ steps.get_version.outputs.version }}" \
            --body "Automated PR to merge main into release/${{ steps.get_version.outputs.version }}."
